{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Ticket = require(\"Ticket\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        scrollDelta: 40,\r\n        bottomStart: -323,\r\n        boxDX: 141,\r\n        boxDY: 122,\r\n        delay: 0.5,\r\n        boxLayer: cc.Node,\r\n        baseBox: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        _manager: null,\r\n        _ticket: null,\r\n        \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        //console.log('Load Piramid...');\r\n        //this.aTicket = Ticket;//.getComponent('Ticket');\r\n        //this.aTicket = this.aTicket.getComponent('Ticket');\r\n        //this.baseBox = this.baseBox.getComponent('Box'); \r\n        //this.reset();\r\n        //this.buildOutSide();\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    \r\n    init (gManager) {\r\n        this._manager = gManager;\r\n    },\r\n    \r\n    scroll () {\r\n        this.node.runAction(cc.moveBy(this.delay, 0, this.scrollDelta).easing(cc.easeInOut(3.0)));\r\n        \r\n    },\r\n    \r\n    scrollInside () {\r\n        this.node.runAction(cc.moveBy(this.delay, 0, this.scrollDelta).easing(cc.easeInOut(3.0)));\r\n        \r\n    },\r\n\r\n    goInsideShow () {\r\n        //esto es para hacer el show de entrar en la boca de la piramide\r\n        \r\n        //scroll hasta posicion en que se vea la mascara\r\n        var mouthAnim = this.node.getChildByName('ouside_mouth').getComponent(cc.Animation);\r\n        \r\n        this.node.runAction(\r\n            cc.sequence(\r\n                //cc.delayTime(1), //pausa antes de mover...\r\n                cc.moveBy(2, 0, -180).easing(cc.easeOut(1)),\r\n                //abrir los dientes...\r\n                cc.callFunc( function() { mouthAnim.play('mouthOpen'); }, this )\r\n                )\r\n            );\r\n        \r\n    },\r\n    \r\n    fallingInsideShow () {\r\n        //Cae el personaje al primer risco\r\n        \r\n        this.scheduleOnce(function() {  \r\n            this.node.runAction(cc.moveBy(1.5, 0, 320).easing(cc.easeInOut(3.0)));\r\n        } , 1);\r\n        \r\n        \r\n    },\r\n    \r\n    getIntoChamberShow () {\r\n        //Entra al cilindro...\r\n        //Scrolleamos para que se vea el cilindro\r\n        this.node.runAction(cc.moveBy(2, 0, 380).easing(cc.easeInOut(3.0)));\r\n        \r\n        //aca programar que se abra el cilindro\r\n        this.scheduleOnce(function() {  \r\n            this.node.getChildByName('cilindroTapa').getComponent(cc.Animation).play('CilindroTapaAbajo');\r\n        } , 2.5);\r\n        \r\n    },\r\n    \r\n    reset () {\r\n        //aca faltan cosas...\r\n        this.node.y = this.bottomStart;\r\n        \r\n        //console.log('BottomStart: ' + this.bottomStart)\r\n        \r\n    },\r\n    \r\n    //Le pone el brillo a la linea que le pasamos\r\n    activateLine ( aLine ) {\r\n        //recorro los boxes y a los que son de la linea los animo...\r\n        for (var vCol = 0; vCol < ( 10 - aLine ); vCol++){\r\n            this.boxLayer.getChildByName( 'Box-' + aLine + '-' + vCol ).getComponent('Box').glow();\r\n        }\r\n        \r\n    },\r\n\r\n    deactivateLines () {\r\n        //var boxes = this.boxLayer.children;\r\n        //cc.log('childrenCount: '+ this.boxLayer.childrenCount );\r\n        for (var i = 0; i < this.boxLayer.childrenCount; i++) {\r\n            //cc.log(this.boxLayer.children[i].name);\r\n            this.boxLayer.children[i].getComponent('Box').unGlow();\r\n        }        \r\n    },\r\n    \r\n    //Para dibujar los bloques de la piramide de Afuera\r\n    //Solo se dibujan... el contenido se obtiene en tiempo real\r\n    drawOutsideBlocks () {\r\n        //limpio los boxes si habia...\r\n        this.boxLayer.removeAllChildren();\r\n        \r\n        var bW = this.boxDX;\r\n        var bH = this.boxDY;\r\n        \r\n        for (var vLinea = 0; vLinea < 5; vLinea++){\r\n            for (var vCol = 0; vCol < ( 10 - vLinea ); vCol++){\r\n                \r\n                var aBox = cc.instantiate(this.baseBox);\r\n                aBox = aBox.getComponent('Box');\r\n                aBox.node.parent = this.boxLayer;//.node;\r\n                aBox.node.zIndex = -10 * vLinea; //se ordena los de abajo mas arriba que los otros...\r\n                \r\n                aBox.node.name = 'Box-' + vLinea + '-' + vCol;\r\n                aBox.lin = vLinea;\r\n                aBox.col = vCol;\r\n                aBox.content = null; //se asigna luego\r\n                aBox.isInsideBox = false;\r\n                //el contenido.... no va mas... es en tiempo real\r\n                //aBox.content = aTicket.getOutSideContent(vLinea, vCol);\r\n                //dibujar...\r\n                aBox.node.setPosition( (vCol * bW) + (vLinea * bW * 0.5), vLinea * bH);\r\n                \r\n                //le damos el GameManager\r\n                aBox.init(this._manager);\r\n                \r\n            }\r\n        }\r\n    },\r\n    \r\n    drawInsideBlocks () {\r\n        //limpio los boxes si habia...\r\n        this.boxLayer.removeAllChildren();\r\n        \r\n        var bW = this.boxDX;\r\n        var bH = this.boxDY;\r\n        \r\n        for (var vLinea = 5; vLinea < 9; vLinea++){\r\n            for (var vCol = 0; vCol < ( 10 - vLinea ); vCol++){\r\n                \r\n                var aBox = cc.instantiate(this.baseBox);\r\n                aBox = aBox.getComponent('Box');\r\n                aBox.node.parent = this.boxLayer;//.node;\r\n                aBox.node.zIndex = 10 * vLinea; //se ordena los de abajo mas arriba que los otros...\r\n                \r\n                aBox.node.name = 'Box-' + vLinea + '-' + vCol;\r\n                aBox.lin = vLinea;\r\n                aBox.col = vCol;\r\n                aBox.content = null; //se asigna luego\r\n                aBox.isInsideBox = true;\r\n                \r\n                //dibujar...\r\n                aBox.node.setPosition( (vCol * bW) + ((vLinea - 5) * bW * 0.5), (vLinea-8) * bH);\r\n                \r\n                //le damos el GameManager\r\n                aBox.init(this._manager);\r\n                \r\n            }\r\n        }\r\n    },\r\n    \r\n\r\n    \r\n});\r\n"
  ]
}