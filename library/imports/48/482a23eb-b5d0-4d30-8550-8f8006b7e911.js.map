{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const GS_PLAY_DOUBLE = 'playDouble';\r\nconst GS_PLAY_OUT = 'playOut';\r\nconst GS_PLAY_IN = 'playIn';\r\nconst GS_TRANS_IN = 'transInside';\r\nconst GS_TRANS_END = 'transEnd';\r\nconst GS_PLAY_BONUS = 'playBonus';\r\nconst GS_PAUSE= 'pause';\r\nconst GS_IDLE = 'idle';\r\nconst GS_OVER = 'over';\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n        //General references...\r\n        playingScene: GS_IDLE,\r\n        \r\n        _activeLine: 0,\r\n        _waitUserInput: false,\r\n        \r\n        _gameLastState: GS_IDLE, \r\n        _gameState: GS_IDLE,\r\n        \r\n        _gameServer: null,\r\n\r\n        //Outside references...\r\n        _piramid: cc.Node,\r\n        _player: cc.Node,\r\n\r\n        _double: cc.Node,\r\n        \r\n        _bonus: cc.Node,\r\n        \r\n        \r\n        //Inside references...\r\n        _insidePiramid: cc.Node,\r\n        _insidePlayer: cc.Node,\r\n        \r\n\r\n        //UI references...\r\n        //ticket: cc.Node, \r\n        uiLayerPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        _uiLayer: cc.Node,\r\n\r\n        audio_Music: cc.AudioClip,\r\n\r\n        //audio_Music_Outside: cc.AudioClip,\r\n        //audio_Music_Trans: cc.AudioClip,\r\n        //audio_Music_Inside: cc.AudioClip,\r\n        \r\n        \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._gameState = GS_IDLE;\r\n        \r\n\r\n        var tmp = this;\r\n\r\n        var listener = {\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function (keyCode, event) {\r\n                cc.log('keyDown: ' + keyCode);\r\n                if (keyCode == 66) { cc.director.loadScene('bonus'); } //B\r\n                if (keyCode == 68) { cc.director.loadScene('double'); } //D\r\n                if (keyCode == 73) { cc.director.loadScene('inside'); } //I\r\n                if (keyCode == 82) { cc.director.loadScene('outside'); } //R\r\n/*                if (keyCode == 66) { tmp.playBonus(); } //B\r\n                if (keyCode == 68) { tmp.playDouble(); } //D\r\n                if (keyCode == 73) { tmp.playInside(); } //I\r\n                if (keyCode == 82) { tmp.restart() } //R\r\n*/                \r\n                }\r\n            }\r\n        \r\n        cc.eventManager.addListener(listener, this.node);\r\n        \r\n        //si tiene la ui la ponemos\r\n        if (this.uiLayerPrefab != null) {\r\n            //cc.log('Cargar UI...');\r\n            var tmpLayer = cc.find('Canvas');\r\n            this._uiLayer = cc.instantiate( this.uiLayerPrefab ); \r\n            this._uiLayer.parent = tmpLayer; // this.node.parent;\r\n            this._uiLayer.zIndex = 100; \r\n            this._uiLayer.setPosition( -960, -540);\r\n\r\n        }\r\n        \r\n\r\n        //para simulaciones\r\n        this._gameServer = this.node.getComponent('VirtualServer');\r\n\r\n        cc.log('Load GameManager...' + this.playingScene);\r\n        \r\n        switch ( this.playingScene ) {\r\n        case GS_IDLE: \r\n            this.idle(); break;\r\n\r\n        case GS_PLAY_OUT: \r\n            this.play(); break;\r\n                \r\n        case GS_PLAY_IN: \r\n            this.playInside(); break;\r\n\r\n        case GS_TRANS_IN: \r\n            this.transInside(); break;\r\n\r\n        case GS_TRANS_END: \r\n            this.transEnd(); break;\r\n                \r\n        case GS_PLAY_BONUS: \r\n            this.playBonus(); break;\r\n        \r\n        case GS_PLAY_DOUBLE: \r\n            this.playDouble(); break;\r\n                \r\n        }\r\n        \r\n    },\r\n\r\n    setState(newState) {\r\n        this._gameLastState = this._gameState;\r\n        this._gameState = newState;      \r\n    },\r\n\r\n    //Pantalla inicial que no hace nada...\r\n    idle () {\r\n        \r\n        cc.audioEngine.stopMusic();\r\n        cc.audioEngine.playMusic(this.audio_Music, true);\r\n\r\n        this.setState( GS_IDLE ); \r\n\r\n        //obtengo las referencias desde la escena cargada\r\n        var tmpLayer = cc.find('Canvas/outside/piramidLayer');\r\n            \r\n        \r\n        tmpLayer.runAction( cc.repeatForever( cc.sequence( cc.moveBy(10, 0, -1050).easing(cc.easeInOut(2) ),\r\n                                                            cc.delayTime(0.5),\r\n                                                            cc.moveBy(10, 0,  1050).easing(cc.easeInOut(2) ),\r\n                                                          )));\r\n\r\n        this.scheduleOnce(function() { cc.director.loadScene('outside'); } , 10);\r\n//        this._waitUserInput = true;\r\n        \r\n        \r\n    },\r\n    \r\n    \r\n    play () {\r\n        //Aqui arranca el juego real...\r\n        //Determinar la jugada de ticket\r\n        //Hacer reset de los componentes\r\n        this._activeLine = 0;\r\n        \r\n        cc.audioEngine.stopMusic();\r\n        cc.audioEngine.playMusic(this.audio_Music, true);\r\n   \r\n\r\n        //obtengo las referencias desde la escena cargada\r\n        this._piramid = cc.find('Canvas/outside/piramidLayer');//.getComponent('Piramid');\r\n        this._player =  cc.find('Canvas/outside/piramidLayer/explorer');//.getComponent('Player');\r\n        \r\n        this._piramid = this._piramid.getComponent('Piramid');\r\n        this._player = this._player.getComponent('Player');\r\n\r\n        this._piramid.init(this);\r\n        this._player.init(this);\r\n        \r\n        this._piramid.reset();\r\n        this._piramid.drawOutsideBlocks();       \r\n        \r\n        this._player.reset();\r\n            \r\n        this.setState( GS_PLAY_OUT ); \r\n\r\n        this._waitUserInput = true;\r\n\r\n        this.glowActiveLine();\r\n        \r\n        \r\n    },\r\n\r\n    \r\n    //Escena de Animación de transicion al interior\r\n    transInside () {\r\n\r\n        this.setState( GS_TRANS_IN ); \r\n\r\n        this._waitUserInput = false;\r\n                \r\n        cc.audioEngine.playMusic(this.audio_Music, false);\r\n        \r\n        this.scheduleOnce(function() { cc.director.loadScene('inside'); } , 2);\r\n        \r\n    },\r\n\r\n    //Escena de Animación del final\r\n    transEnd () {\r\n\r\n        this.setState( GS_TRANS_END ); \r\n\r\n        this._waitUserInput = false;\r\n                \r\n        cc.audioEngine.playMusic(this.audio_Music, false);\r\n        \r\n        this.scheduleOnce(function() { cc.director.loadScene('double'); } , 8);\r\n        \r\n    },\r\n\r\n    \r\n    //Escena de Juego en Interior de la pirámide, bajada\r\n    playInside () {\r\n\r\n        //Aqui pasamos al juego interno...\r\n        this.setState( GS_PLAY_IN ); \r\n\r\n        cc.audioEngine.stopMusic();\r\n        cc.audioEngine.playMusic(this.audio_Music, true);\r\n\r\n        //El _activeLine sigue en 5.. porque se mantiene la numeración de las líneas\r\n        this._activeLine = 5;\r\n\r\n\r\n        //obtengo las referencias desde la escena cargada\r\n        this._insidePiramid = cc.find('Canvas/inside/insidePiramidLayer');//.getComponent('Piramid');\r\n        this._insidePlayer =  cc.find('Canvas/inside/insidePiramidLayer/insideExplorer');//.getComponent('Player');\r\n        \r\n        this._insidePiramid = this._insidePiramid.getComponent('Piramid');\r\n        this._insidePlayer = this._insidePlayer.getComponent('Player');\r\n\r\n        this._insidePiramid.init(this);\r\n        this._insidePlayer.init(this);\r\n        \r\n        this._insidePiramid.reset();\r\n        this._insidePiramid.drawInsideBlocks();       \r\n        \r\n        this._insidePlayer.reset();\r\n        \r\n        this._insidePiramid.fallingInsideShow();\r\n\r\n        this.glowActiveLine();\r\n        \r\n        this._waitUserInput = true;\r\n\r\n\r\n    },\r\n    \r\n    playBonus () {\r\n\r\n        this.setState( GS_PLAY_BONUS );\r\n        \r\n        //obtengo las referencias desde la escena cargada\r\n        this._bonus = cc.find('Canvas/bonus').getComponent('Bonus');\r\n                \r\n        this._bonus.init( this );\r\n        \r\n    },\r\n    \r\n    playDouble () {\r\n        \r\n        this.setState( GS_PLAY_DOUBLE );\r\n        \r\n        //obtengo las referencias desde la escena cargada\r\n        this._double = cc.find('Canvas/double').getComponent('Double');\r\n        \r\n        //cc.log(this._double.uuid);\r\n        \r\n        //this._double = this._double.getComponent('Double');\r\n        \r\n        this._double.init( this );\r\n        \r\n        //this.doubleScreen.showScreen();\r\n        \r\n    },\r\n        \r\n    //DOUBLE: responder a la palanca...    \r\n    doHandleTouch( h ) {\r\n        \r\n        cc.log('Handle touch ' + h);\r\n        //Obtenemos el valor del doble o nada en el server y respondemos...\r\n        \r\n        //llamamos de acuerdo al valor...\r\n        if ( h == 'L') { this._double.doWin() } else { this._double.doLose() }\r\n        \r\n        \r\n        \r\n    },    \r\n        \r\n    \r\n    glowActiveLine (){\r\n        if (this._gameState === GS_PLAY_OUT) {\r\n            this._piramid.activateLine( this._activeLine );\r\n        } else if (this._gameState === GS_PLAY_IN) {\r\n            this._insidePiramid.activateLine( this._activeLine );\r\n        }\r\n    },\r\n    \r\n    unglowActiveLine (){\r\n        if (this._gameState === GS_PLAY_OUT) {\r\n            this._piramid.deactivateLines();\r\n        } else if (this._gameState === GS_PLAY_IN) {\r\n            this._insidePiramid.deactivateLines();\r\n        }\r\n    },\r\n    \r\n    //es usado desde Player para informar que la animacion del moveToBox ha terminado\r\n    jumpEnd: function (aBox) {\r\n        //console.log('GM: JumpEnd: ' + aBox.lin + ', ' + aBox.col + '  content: '+ aBox.content);\r\n        if (aBox.content !== 'X') { \r\n            if (this._gameState === GS_PLAY_OUT) {\r\n                this._piramid.scroll(); \r\n            } else if (this._gameState === GS_PLAY_IN) {\r\n                this._insidePiramid.scrollInside(); \r\n            }\r\n        } else if (aBox.content === 'X') {\r\n            this.setState( GS_OVER );\r\n        }\r\n\r\n        this.nextGameStep();\r\n        \r\n    },\r\n    \r\n    //Usuario ha seleccionado un box\r\n    userChoice (aBox) {\r\n        \r\n        if (aBox.lin === this._activeLine) {\r\n            \r\n            //Debemos desactivar el ingreso...\r\n            this._waitUserInput = false;\r\n            this.unglowActiveLine();\r\n            \r\n            //Debemos pedir el contenido del Box\r\n            //aBox.content = 'o';\r\n            aBox.content = this._gameServer.getBoxContent(aBox.lin, aBox.col);\r\n            \r\n            //Llamamos a animar el Jugador hasta el box seleccionado\r\n            if (this._gameState === GS_PLAY_OUT) {\r\n                this._player.jumpToOutsideBox( aBox );\r\n            } else if (this._gameState === GS_PLAY_IN) {\r\n                this._insidePlayer.jumpToInsideBox( aBox );\r\n            }\r\n            \r\n            //Aqui se ejecuta inmediatamente aunque no haya terminado la \r\n            //animacion del movimiento hacia el box\r\n            //Lo que deseemos que se haga al fin de la animacion va en jumpEnd\r\n\r\n            \r\n        }else {\r\n            aBox.tilt();    \r\n        }\r\n        \r\n    },\r\n    \r\n    userBonusChoice( id ) {\r\n        //El jugador ha seleccionado un objeto activo del Bonus...\r\n        \r\n        \r\n    },\r\n    \r\n    nextGameStep () {\r\n        //Aqui analizamos y preparamos el proximo paso del juego a la espera del user...\r\n        switch ( this._gameState ) {\r\n        case GS_PLAY_OUT: //si estamos afuera...\r\n            //Sumamos la linea activa...\r\n            this._activeLine++;\r\n            \r\n            //Mostramos el resultado de la linea que pasamos...???\r\n            \r\n            //Si terminamos la piramide exterior exitosamente pasamos a la escena del interior\r\n            if (this._activeLine === 5){\r\n\r\n                this._piramid.deactivateLines();\r\n                \r\n                //hacemos el show del ingreso...\r\n                this._piramid.goInsideShow();\r\n                \r\n                this.scheduleOnce(function() { this._player.jumpToMouth(); } , 3);\r\n\r\n                //Pautamos que en X tiempo se pase al interior\r\n                //ocultamos la del outside...\r\n                //ponemos la animacion intermedia\r\n                //pasamos al nuevo estado de juego\r\n                this.scheduleOnce(function() {  //this.outsideScreen.hideScreen(); \r\n                                                //cc.audioEngine.stopMusic();\r\n                                                //cc.audioEngine.playMusic(this.audio_Music_Trans);\r\n                                                cc.director.loadScene('transInside'); }, 5);\r\n                                              //this.transScreen.showScreen(); } , 5);\r\n                \r\n                //this.scheduleOnce(function() { this.transScreen.hideScreen(); this.playInside(); } , 7);\r\n\r\n\r\n            } else { //si aun seguimos jugando outside...\r\n                //Iluminamos la nueva linea...\r\n                this.glowActiveLine();\r\n                this._waitUserInput = true;\r\n                \r\n            }\r\n            \r\n            //Si muere vamos a escena final\r\n            break;\r\n\r\n        case GS_PLAY_IN: \r\n            //Sumamos la linea activa...\r\n            this._activeLine++;\r\n\r\n            //Mostramos el resultado de la linea que pasamos...???\r\n            \r\n            //Si terminamos la piramide exterior exitosamente pasamos a la escena del interior\r\n            if (this._activeLine == 9){\r\n                \r\n                this._insidePiramid.deactivateLines();\r\n\r\n                //hacemos el show del salto al doble o nada...\r\n                this._insidePiramid.getIntoChamberShow();\r\n                \r\n                this.scheduleOnce(function() { this._insidePlayer.jumpToChamber(); } , 4);\r\n                \r\n                this.scheduleOnce(function() { cc.director.loadScene('end'); } ,7);\r\n                \r\n                \r\n            } else { //si aun seguimos jugando outside...\r\n                //Iluminamos la nueva linea...\r\n                this.glowActiveLine();\r\n                this._waitUserInput = true;\r\n\r\n            }\r\n            //Si muere vamos a escena final\r\n            break;\r\n            \r\n        case GS_PLAY_BONUS: \r\n            \r\n            break;            \r\n    \r\n        case GS_OVER: \r\n            //Se acabo el juego....    \r\n            this._waitUserInput = false;\r\n\r\n            //vemos en que estado estaba antes...\r\n            switch ( this._gameLastState ) {\r\n            case GS_PLAY_OUT: //si estabamos afuera...\r\n                this._piramid.deactivateLines();    \r\n            break;            \r\n\r\n            case GS_PLAY_IN: //si estabamos dentro...\r\n                this._insidePiramid.deactivateLines();    \r\n            break;\r\n            }\r\n            \r\n            this.scheduleOnce(function() { cc.director.loadScene('outside'); } ,5);\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n    },\r\n    \r\n    \r\n    \r\n    //called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}