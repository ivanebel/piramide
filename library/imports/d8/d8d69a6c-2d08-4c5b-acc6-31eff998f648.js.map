{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;;AAYR,mBAAW,EAAE,EAAE;;KAElB;;;AAGD,UAAM,EAAE,kBAAY;;AAEhB,YAAI,CAAC,QAAQ,EAAE,CAAC;KAEnB;;AAED,iBAAa,EAAC,uBAAC,KAAK,EAAE,OAAO,EAAE;AAC3B,YAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACtC,YAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;AAEhC,eAAO,CAAC,CAAC;KACZ;;;AAGD,YAAQ,EAAC,oBAAE;AACP,YAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;AAEtB,YAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACnD,YAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,UAAU,CAAA,AAAC,CAAC,CAAC;;;AAG7D,aAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAC;;AAEnC,gBAAI,KAAK,GAAG,CAAC,CAAC;AACd,gBAAI,YAAY,GAAG,EAAE,CAAC;AACtB,gBAAI,QAAQ,GAAG,GAAG,CAAC;;AAEnB,gBAAI,KAAK,IAAI,UAAU,EAAE;AAAC,qBAAK,EAAE,CAAA;aAAC;;AAElC,iBAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAK,EAAE,GAAG,KAAK,AAAE,EAAE,IAAI,EAAE,EAAC;;AAE7C,wBAAQ,GAAG,GAAG,CAAC;;AAEf,oBAAI,IAAI,IAAI,SAAS,IAAI,KAAK,IAAI,UAAU,EACxC;AAAE,4BAAQ,GAAG,GAAG,CAAA;iBAAE,MACjB,IAAK,KAAK,GAAG,CAAC,KAAM,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,IAAI,IAAI,KAAI,CAAC,GAAG,KAAK,AAAC,CAAA,AAAE,EAChE;AAAE,4BAAQ,GAAG,GAAG,CAAC,AAAC,KAAK,EAAE,CAAA;iBAAE;;;AAG/B,4BAAY,GAAG,YAAY,GAAG,QAAQ,CAAC;;;;aAI1C;AACD,mBAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,cAAc,GAAG,YAAY,CAAC,CAAC;;AAE9D,gBAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAEvC;KACJ;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n        _fakeTicket: '',\r\n        \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        this.generate();\r\n        \r\n    },\r\n    \r\n    getBoxContent (aLine, aColumn) {\r\n        var tmpLine = this._fakeTicket[aLine];\r\n        var c = tmpLine.charAt(aColumn);\r\n        //console.log('Devolviendo Box.lin: ' + aLine + ' Box.col: ' + aColumn + ' Contenido: ' + c);\r\n        return c;\r\n    },\r\n\r\n    //generar un ticket aleatoriamente\r\n    generate (){\r\n        this._fakeTicket = [];\r\n        \r\n        var vBonusLine = Math.floor(Math.random() * 4) + 1;\r\n        var vBonusCol = Math.floor(Math.random() * (9 - vBonusLine));\r\n        \r\n        //Generar el outsideMap...\r\n        for (var vLine = 0; vLine < 9; vLine++){\r\n            \r\n            var vLose = 1;//((10 - vLine) / 5) + 1;\r\n            var vContentLine = '';\r\n            var vContent = 'o';\r\n            \r\n            if (vLine == vBonusLine) {vLose++}\r\n            \r\n            for (var vCol = 0; vCol < ( 10 - vLine ); vCol++){\r\n                \r\n                vContent = 'o';\r\n                \r\n                if (vCol == vBonusCol && vLine == vBonusLine) \r\n                    { vContent = 'B' }\r\n                else if ( vLose > 0 && ( Math.random() < 0.3 || vCol===(9 - vLine) ) ) \r\n                    { vContent = 'X'; vLose-- }\r\n                \r\n                //corregir puede quedar sin asignar loosers \r\n                vContentLine = vContentLine + vContent;\r\n                \r\n                //Dibujamos en layer...\r\n                //this._drawBoxOnTicket(vLine, vCol, vContent);\r\n            }\r\n            console.log('linea ' + vLine + ' Contenido: ' + vContentLine);\r\n            \r\n            this._fakeTicket.push(vContentLine);    \r\n            \r\n        }\r\n    },    \r\n\r\n});\r\n"
  ]
}