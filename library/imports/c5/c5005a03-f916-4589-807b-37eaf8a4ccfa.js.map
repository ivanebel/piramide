{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        active: true,\r\n        lin: 0,\r\n        col: 0,\r\n        content: 'o',\r\n        isInsideBox: false,\r\n        \r\n        audio_touch: cc.AudioClip,\r\n        audio_coins: cc.AudioClip,\r\n        audio_rock: cc.AudioClip,\r\n        audio_arrow: cc.AudioClip,        \r\n        \r\n        _manager: null,\r\n        _coins: cc.Node,\r\n        _rock: cc.Node\r\n       // _arrows: cc.Node\r\n        \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        this._coins = this.node.getChildByName('coins');\r\n        this._rock = this.node.getChildByName('piedra');\r\n\r\n\r\n        var tmp = this;\r\n        this.node.on(cc.Node.EventType.TOUCH_END, function ( event ) {\r\n            tmp.doTouch();\r\n            //console.log('touch bloque: ' + tmp.lin + ', ' + tmp.lin + '  content: '+ tmp.content);\r\n        });\r\n        \r\n        \r\n    },\r\n    \r\n    init (gManager) {\r\n        this._manager = gManager;\r\n    },\r\n\r\n    doTouch () {\r\n        //console.log('touch bloque: ' + this.lin + ', ' + this.col + '  content: '+ this.content);\r\n        //depende del estado del bloque es lo que hacemos...\r\n        //pero quiza solo pasamos el mensaje al GameManager para que resuelva...\r\n        if (this._manager._waitUserInput === true) { \r\n            cc.audioEngine.playEffect(this.audio_touch);\r\n            this._manager.userChoice(this);\r\n        }\r\n    },\r\n\r\n    showContent () {\r\n        //console.log('Show content....');\r\n        //var anim = this.getComponent(cc.Animation);\r\n//        switch (this.content){\r\n//        case 'o': this._coins.getComponent(cc.Animation).play('BoxCoins'); break;\r\n//        case 'X': anim.play('BlockArrow'); break;\r\n//        case 'B': anim.play('BlockBonus');\r\n//        }\r\n        var firstJumpDelay = (this.lin===5)? 0.25 : 0; \r\n\r\n        switch (this.content){\r\n        case 'o': this.scheduleOnce( this.safe , 0.2); break;\r\n        case 'X': this.scheduleOnce( this.trap , 0.01 + firstJumpDelay ); break;\r\n        //case 'X': this.scheduleOnce( this.trap , (this.isInsideBox===true)? 0.25 + firstJumpDelay : 0.01 ); break;\r\n        case 'B': this.scheduleOnce( this.bonus , 0.5);\r\n        }\r\n            \r\n    },\r\n    \r\n    glow () {\r\n        var anim = this.getComponent(cc.Animation);\r\n        anim.play('BlockGlow');        \r\n        this.node.getChildByName('glow').active = true;\r\n    },\r\n\r\n    unGlow () {\r\n        var anim = this.getComponent(cc.Animation);\r\n        anim.stop('BlockGlow');        \r\n        this.node.getChildByName('glow').active = false;\r\n    },\r\n\r\n\r\n    tilt () {\r\n        var anim = this.getComponent(cc.Animation);\r\n        anim.play('BlockTilt');        \r\n    },\r\n\r\n    trap () {\r\n        if (this.isInsideBox === true) {\r\n            cc.audioEngine.playEffect(this.audio_rock);\r\n            this._rock.getComponent(cc.Animation).play('BlockPiedra');\r\n        } else {\r\n            var anim = this.getComponent(cc.Animation);\r\n            cc.audioEngine.playEffect(this.audio_arrow);\r\n            anim.play('BlockArrow');\r\n        }\r\n    },\r\n    \r\n    safe () {\r\n        cc.audioEngine.playEffect(this.audio_coins);\r\n        \r\n        this._coins.getComponent(cc.Animation).play('BoxCoins');\r\n        //var anim = this.getComponent(cc.Animation);\r\n        //anim.play('BlockSafe');        \r\n    },\r\n\r\n//    dropRock () {\r\n//        this._rock.getComponent(cc.Animation).play('BoxCoins');\r\n//    },\r\n\r\n    bonus () {\r\n        var anim = this.getComponent(cc.Animation);\r\n        anim.play('BlockSafe');        \r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}